<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="epMessage.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>